面试题目：
编译与运行平台：Linux--vim，gcc 
编程语言： C
程序说明：
	yc_interview.c    主程序：读取大文件内容，文件路径与文件名为/home/yangchao/workspace/interview/testForTop10.txt
			          将每个 "查询关键字" 依次插入散列表中，构建散列表，时间代价O（N）（N为“查询关键字”的个数）
			          针对散列表的每个链表，根据冒泡排序或者快速排序得到出现从大到小的有序链表，依次输出频率递减的关键字及对应频率！
				  
        yc_hash.h         子程序头文件：定义散列表的数据结构和函数申明
	yc_hash.c         子程序：yc_hash.h中函数定义
	testForTop10.txt  为自己随意写的测试样本
	log               为程序运行结果，通过Linux里面shell的输出重定向符“>>” 实现
待改进处：1.动态分配散列表规模--桶的大小
	  2.用标准容器库和算法库对链表进行排序，时间代价是O(logN), 而我采用的冒泡的时间O（N^2），快速排序的时间代价O(NlogN)
BUG     ： 快速排序得到的结果有点小问题，没有完全按照降序排列。有待进一步改进
